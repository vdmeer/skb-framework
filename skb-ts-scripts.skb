#!/usr/bin/env bash
##
## Scripts for target set skb-fw
##
## @author     Sven van der Meer <vdmeer.sven@mykolab.com>
## @version    v0.0.0
##

TsRunTask() {
    local RELEASE_VERSION="$(cat src/main/bash/etc/version.txt)"
    local TOOL_VERSION="${RELEASE_VERSION}"

    shopt -s globstar

    case $1 in
        help)
            printf "\n    available targets"
            printf "\n       all           - runs all targets, except help"
            printf "\n       clean         - removes all created artifacts (gradle, mvn)"
            printf "\n       help          - prints this help"
            printf "\n"
            printf "\n       tool          - builds the framework tool (Java app to convert ADOC to TXT), gradle"
            printf "\n       mkdirs        - creates required directories"
            printf "\n       readme        - creates the file README.adoc for the source repository"
            printf "\n       dist          - builds distribution archives (not the PPA!) using gradle"
            printf "\n       site          - creates the framework site (mvn)"
            printf "\n\n    Notes: "
            printf "\n       - separate all required targets using a comma."
            printf "\n       - sequence of given targets is not critical, they are always build in the right order."
            printf "\n       - the site will not rebuild element lists if they do exist already"
            printf "\n         -- use target clean or run 'mvn clean' to build a fresh site"
            printf "\n\n    Requirements:"
            printf "\n       - gradle           - to build the Java tool and the distributions"
            printf "\n       - JDK8             - to build the tool"
            printf "\n       - Apache Ant       - to set file versions"
            printf "\n       - Apache Maven     - to build the site"
            printf "\n       - asciidoctor      - to build some targets for the manual"
            printf "\n       - asciidoctor-pdf  - to build the PDF manual"
            printf "\n       - coderay          - for syntax highlighting in ADOC files"
            printf "\n"
            ;;

        clean)
            ./gradlew clean
            mvn clean

            (cd tool; ./gradlew clean)
            (cd tool; mvn clean)

            if [[ -d src/main/bash/lib/java ]]; then
                for file in src/main/bash/lib/java/**; do
                    if [[ -f $file ]]; then
                        rm $file
                    fi
                done
                rmdir src/main/bash/lib/java
            fi

            if [[ -d src/main/bash/doc/manual ]]; then
                for file in src/main/bash/doc/manual/**; do
                    if [[ -f $file ]]; then
                        rm $file
                    fi
                done
                rmdir src/main/bash/doc/manual
                rmdir src/main/bash/doc
            fi

            if [[ -d src/main/bash/man/man1 ]]; then
                for file in src/main/bash/man/man1/**; do
                    if [[ -f $file ]]; then
                        rm $file
                    fi
                done
                rmdir src/main/bash/man/man1
                rmdir src/main/bash/man
            fi
            ;;

        tool)
            (cd tool; ./gradlew)
            mkdir -p src/main/bash/lib/java
            cp tool/build/libs/skb-framework-tool-${TOOL_VERSION}-all.jar src/main/bash/lib/java
            ;;

        mkdirs)
            mkdir -p src/main/bash/man/man1 2> /dev/null
            mkdir -p src/main/bash/doc/manual 2> /dev/null
            ;;

        readme)
            README_FILE=./README.adoc
            if [[ -f "$README_FILE" ]]; then
                rm $README_FILE
            fi
            printf ":release-version: %s\n" "${RELEASE_VERSION}" > $README_FILE
            printf "= SKB Framework\n" >> $README_FILE
            printf "v{release-version}\n" >> $README_FILE
            printf ":page-layout: base\n" >> $README_FILE
            printf ":toc: preamble\n\n" >> $README_FILE
            printf "a flexible and extensible automation framework\n\n" >> $README_FILE

            tail -n +13 src/doc/fragments/readme/introduction.adoc >> $README_FILE
            tail -n +13 src/doc/fragments/readme/install.adoc >> $README_FILE
            tail -n +13 src/doc/fragments/readme/run.adoc >> $README_FILE

            printf "\n\n== Description\n\n" >> $README_FILE
            cat src/main/bash/etc/manual/application/description.adoc >> $README_FILE
            printf "\n\n" >> $README_FILE

            tail -n +13 src/doc/fragments/requirements.adoc >> $README_FILE
            printf "\n\n" >> $README_FILE

            tail -n +13 src/doc/fragments/releases.adoc >> $README_FILE
            printf "\n\n" >> $README_FILE

            tail -n +13 src/doc/fragments/resources.adoc >> $README_FILE
            printf "\n\n" >> $README_FILE
            ;;

        dist)
            ExecuteScenario build-fw-distro
            ./gradlew
            ls -l ./build/distributions
            ;;

        site)
            ${DMAP_TASK_EXEC["build-mvn-site"]} --build --targets --id fw
            ;;

        *)
            ConsoleWarnStrict "skb-fw:" "nunknown target '$TARGET'\nThis is a programming error in the script"
            ;;
    esac
}
